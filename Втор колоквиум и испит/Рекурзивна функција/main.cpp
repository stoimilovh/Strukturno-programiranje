//Да се имплементира рекурзивна функција која за низа од цели броеви $[a{0}, a{1}, ..., a_{n-1}]$
//ќе ја пресмета вредноста на непрекинатата дропка дефинирана како:
//
//v=a0+1a1+...1an−2+1an−1
//
//Да се напише програма во која се чита цел број N, по што се читаат елементите на низа од N цели броеви (не повеќе од 100).
//Потоа се повикува рекурзивната функција и се печати резултатот во нов ред.

#include <stdio.h>

double rekurzija (double a[], int n, int i){
    if(n==1)
        return a[0];
    else if(i==n+1){
        return 0;
    }
    else
        return a[i]+(1/rekurzija(a, n, i+1));
}

int main()
{
    int n, i;
    double v, a[100];
    scanf("%d", &n);
    for(i=0; i<n; i++){
        scanf("%lf", &a[i]);
    }
    i=0;
    v=rekurzija(a, n, i);
    printf("%lf", v);
    return 0;
}
